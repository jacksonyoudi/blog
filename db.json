{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/favicon_live.png","path":"favicon_live.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo_live.png","path":"medias/logo_live.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/mj-moon.png","path":"medias/mj-moon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.png","path":"medias/avatar.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/7.jpg","path":"medias/banner/7.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1627693266607},{"_id":"source/categories/index.md","hash":"8068af7643e0db9e5a7cf148b54c2229421d8bcf","modified":1627694544309},{"_id":"source/404/index.md","hash":"a5d1dc898bce568c76c405e15c033ad1e951c16c","modified":1627694735108},{"_id":"source/about/index.md","hash":"52310f769e4fefab3c831bc5bae7def8af8af193","modified":1627694609110},{"_id":"source/tags/index.md","hash":"7b891f845a41250138ad54652c7ca4e2c5a4bd32","modified":1627694576858},{"_id":"source/contact/index.md","hash":"e516402841f678b98e082830375940ebab6b4fb8","modified":1627694660557},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1627694263217},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1627694263218},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1627694263218},{"_id":"themes/hexo-theme-matery/README.md","hash":"ddaf6310154e314385d63041da61c418055314f6","modified":1627694263218},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"a2267aed16d52f4adeb13f555d36d076855387af","modified":1627694263219},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"7ee1acc2dee83e722333b41479201522e0e4e2f8","modified":1627721928877},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"bb583b880bebd29bdba0487068db60b37c2fdebf","modified":1627694263219},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"6fb0903b32d3d2518576aae0b1a5d03ea720fcf4","modified":1627694263220},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"6013123fd47d481ce0a64fc75c5a39bb1948046b","modified":1627694263220},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1627694263220},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1627694263231},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1627694263232},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1627694263231},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"a777733e03d954ac265a3d0523245bd191732130","modified":1627694263233},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1627694263232},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1627694263232},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"f421840a8076ebe6a53c85483d6a8e8634af9cc0","modified":1627694263233},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"51e5369ec6b017cc702a8d957fc052c59dd4c3d7","modified":1627694263233},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1627694263234},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"4bfb9e946a90724fc8a902efe404c7b20549a38c","modified":1627694263233},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1627694263234},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1627694263237},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1627694263220},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1627694263221},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1627694263234},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1627694263221},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1627694263220},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"c35e4254ff0738878f65251a657b4fdcafc4b270","modified":1627694263221},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1627694263220},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"5ad05cdc0544d77f0058b9faeb1742628b61d002","modified":1627694263222},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1627694263221},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1627694263221},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1627694263222},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1627694263222},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1627694263222},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1627694263222},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f8438ac80df005934a330b029de292d26f0b6ecb","modified":1627694263222},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1627694263222},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1627694263223},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"738b83cd90fe1b26971d803fc89c56193323da1e","modified":1627694263223},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1627694263224},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"cb0cb452be1cd1857ba600f04025b506f3b6fc79","modified":1627694263223},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"78b70ff24b3039c871331ebec114b936c1756cc8","modified":1627694263223},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1627694263224},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1627694263224},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"85f0ef1c390694a1661e77f44a3ed76555099385","modified":1627694263223},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1627694263225},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"4002adc615f6d3959993dcb62004a07adfc3fe4f","modified":1627694263224},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1627694263225},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1627694263226},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1627694263225},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1627694263226},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1627694263226},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1627694263226},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"045f3aaade1dc6749a1f824b0405b5fdb9e041e4","modified":1627694263227},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1627694263227},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1627694263228},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1627694263227},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1627694263228},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1627694263228},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1627694263228},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1627694263229},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1627694263230},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1627694263229},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1627694263229},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1627694263229},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1627694263230},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1627694263231},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1627694263231},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1627694263230},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1627694263235},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1627694263235},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1627694263236},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1627694263235},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1627694263237},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"a630f6e8643904073dce9eada57b5c16c4dba5e2","modified":1627694263236},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1627694263237},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1627694263238},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"e1482406c58ea2a0eb178d7e4efb2c879cdddc80","modified":1627694263238},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1627694263351},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1627694263362},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1627694263382},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1627694263383},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1627694263239},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1627694263239},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1627694263240},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1627694263240},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1627694263272},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1627694263272},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1627694263241},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1627694263272},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1627694263273},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1627694263273},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1627694263274},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1627694263275},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1627694263273},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1627694263273},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1627694263273},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1627694263283},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1627694263290},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1627694263297},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1627694263297},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1627694263291},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1627694263321},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1627694263310},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1627694263321},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1627694263322},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1627694263322},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1627694263322},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1627694263335},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1627694263340},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1627694263335},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1627694263361},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1627694263361},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1627694263361},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1627694263361},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1627694263364},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1627694263366},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1627694263367},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1627694263368},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1627694263375},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1627694263377},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1627694263378},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1627694263379},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1627694263378},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1627694263380},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1627694263381},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1627694263381},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1627694263383},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1627694263384},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1627694263255},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1627694263257},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1627694263257},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1627694263257},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1627694263300},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1627694263299},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1627694263300},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1627694263308},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1627694263308},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1627694263308},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1627694263308},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1627694263309},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1627694263309},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1627694263331},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1627694263333},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1627694263310},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1627694263332},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1627694263333},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1627694263332},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1627694263334},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1627694263334},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1627694263276},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1627694263291},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1627694263298},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1627694263341},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1627694263352},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1627694263354},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1627694263355},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1627694263364},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1627694263363},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1627694263366},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1627694263365},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1627694263367},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1627694263368},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1627694263369},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1627694263375},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1627694263376},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1627694263379},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1627694263382},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1627694263380},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1627694263241},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1627694263244},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1627694263252},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1627694263252},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1627694263253},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1627694263271},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1627694263272},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1627694263362},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1627694263312},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1627694263353},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1627694263320},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1627694263350},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1627694263359},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1627694263366},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1627694263256},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1627694263271},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1627694263260},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1627694263358},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1627694263339},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1627694263250},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1627694263282},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1627694263289},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1627694263269},{"_id":"themes/hexo-theme-matery/source/favicon_live.png","hash":"973d210ae3340b98a3be67c25654ee21818de1da","modified":1619614356250},{"_id":"themes/hexo-theme-matery/source/medias/logo_live.png","hash":"973d210ae3340b98a3be67c25654ee21818de1da","modified":1619614356250},{"_id":"themes/hexo-theme-matery/source/medias/mj-moon.png","hash":"a4225a52d5655dfa69f639d0a3dfb24336aae403","modified":1627698371668},{"_id":"themes/hexo-theme-matery/source/medias/banner/7.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1627694263360},{"_id":"themes/hexo-theme-matery/source/medias/avatar.png","hash":"973d210ae3340b98a3be67c25654ee21818de1da","modified":1619614356250},{"_id":"source/_posts/go-mod-use.md","hash":"fd1a2e18609857cb99a8449a7dd0d92015d6fa54","modified":1627719440027},{"_id":"public/search.xml","hash":"f33f40ff8cebf45024d851c342e69d477af46f2f","modified":1627722854082},{"_id":"public/404/index.html","hash":"e95f2fca12ca1e5be81a962ed9d5955686cf74e6","modified":1627722854082},{"_id":"public/about/index.html","hash":"d76e2909452b71099fb31161e57da8931b7df734","modified":1627722854082},{"_id":"public/categories/index.html","hash":"58685bef241d5f58f1a8c2775654789df6e82350","modified":1627722854082},{"_id":"public/contact/index.html","hash":"99feec789e060e880d7a52ff78e674601d3a16df","modified":1627722854082},{"_id":"public/tags/index.html","hash":"51c6081d8942372819b2113aa1cb000476e9f79b","modified":1627722854082},{"_id":"public/2021/07/31/hello-world/index.html","hash":"def1be63763b84817efea5439787983108b9dc74","modified":1627722854082},{"_id":"public/archives/index.html","hash":"38501703d5fe01a9a5a5eec29477ee50c8e98fca","modified":1627722854082},{"_id":"public/2021/07/31/go-mod-use/index.html","hash":"b346d8aec33641dddd4bebb704e0418e2206c769","modified":1627722854082},{"_id":"public/archives/2021/index.html","hash":"95c5e9483c7b15757a3f6a494fc537cabb80ed3e","modified":1627722854082},{"_id":"public/archives/2021/07/index.html","hash":"418df01e6e95d4741a3c16b0d3b1d8c9960de53a","modified":1627722854082},{"_id":"public/index.html","hash":"1907f2a64af4afaff580aa462f8bb480839406d6","modified":1627722854082},{"_id":"public/categories/go/index.html","hash":"f4b4495f0bdb4503a8d05297ec5784c2619666e8","modified":1627722854082},{"_id":"public/tags/go/index.html","hash":"5da216cc2274b47eb9364573b9db517b9b34c302","modified":1627722854082},{"_id":"public/tags/tool/index.html","hash":"3e31a1f9e0f432dfea6dbcdd9332aadaa1e6675c","modified":1627722854082},{"_id":"public/tags/language/index.html","hash":"036b257bb157482f156a7886385fa657d5b56049","modified":1627722854082}],"Category":[{"name":"go","_id":"ckrrhhxow0001vluqhn6r986b"}],"Data":[],"Page":[{"title":"404","date":"2021-07-31T01:25:04.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-07-31 09:25:04\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2021-07-31T01:25:35.108Z","path":"404/index.html","comments":1,"_id":"ckrr48b2f0000dnuq3kxn2jgu","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2021-07-31T01:23:02.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-07-31 09:23:02\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2021-07-31T01:23:29.110Z","path":"about/index.html","comments":1,"_id":"ckrr48b2i0001dnuq87df6ww8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2021-07-31T01:21:46.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-07-31 09:21:46\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2021-07-31T01:22:24.309Z","path":"categories/index.html","comments":1,"_id":"ckrr48b2j0002dnuq7kbvglj5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"contact","date":"2021-07-31T01:24:05.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2021-07-31 09:24:05\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2021-07-31T01:24:20.557Z","path":"contact/index.html","comments":1,"_id":"ckrr48b2k0003dnuq78pwhw40","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2021-07-31T01:22:35.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-07-31 09:22:35\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2021-07-31T01:22:56.858Z","path":"tags/index.html","comments":1,"_id":"ckrr48b2k0004dnuqb6fcgcjf","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-07-31T01:01:06.607Z","updated":"2021-07-31T01:01:06.607Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckrr48b2m0005dnuqhby796dn","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"go mod使用","date":"2021-07-31T07:45:52.000Z","img":"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/PuXsa5.jpg","top":true,"hide":false,"cover":true,"coverImg":"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/YDsDmh.jpg","toc":true,"mathjax":false,"summary":"本文很细致的介绍go mod使用，一步一步代码完全掌握go mod，深入学习","_content":"\n\n最近由于换工作，开始交接工作。整理以前的工作内容，由于组内就我一个在做go和大数据。 所以开发没有规划，当时是怎么快怎么来。go也是使用最传统的go path的方式管理的。都是手动管理依赖的。现在交接给他人，需要多人开发，发现很多问题。比如版本问题，各种依赖的问题等等。\n\n由于工作原因，几乎所有主流语言都写过。所以，对应语言包管理工具也都了解和使用过。我前面有写过maven的使用。\nmaven是使用过的功能最强大的包管理工具了，maven定位是项目管理工具。pip和npm都是及格的产品。\n\n我个人觉得，一个包管理工具应该有以下功能：\n\n### 基本功能\n1. 依赖管理\n2. 依赖包版本控制\n3. 对应的包管理平台\n4. 可以私有化部署\n\n加分：\n5. 代码包是否可以复用\n6. 构建，测试,打包\n7. 发布上线\n\n\n对比上面几点：\n目前做的最好的也就 maven了，gradle没有使用过，不知道。\n\n\n今天主角是go mod，先来谈谈没有使用go mod之前的问题。\n\n### 使用go path问题\n1. 代码开发必须在go path src目录下，不然，就有问题。\n2. 依赖手动管理\n3. 依赖包没有版本可言\n\n从这个看， go path不算包管理工具\n\n### govendor\n1. 解决了包依赖，一个配置文件就管理\n2. 依赖包全都下载到项目vendor下，每个项目都把有一份。拉取项目时,开始怀疑人生。\n\n\n\n\n### go mod介绍\ngo modules 是 golang 1.11 新加的特性。现在1.12 已经发布了，是时候用起来了。Modules官方定义为：\n> 模块是相关Go包的集合。modules是源代码交换和版本控制的单元。 go命令直接支持使用modules，包括记录和解析对其他模块的依赖性。modules替换旧的基于GOPATH的方法来指定在给定构建中使用哪些源文件。\n\n\n### 如何使用go mod\n首先，必须升级go到1.11,目前版本是1.14\n下面我以我自己升级演示：\n\n```bash\n\n### 卸载旧版本，删除对应文件\nbrew uninstall -f go\n\n### 更新一下brew\n\nbrew update\n\n\n### 安装go\nbrew install go\n```\n\n上面升级完了，使用 `go version`看下版本\n```\ngo version go1.14.1 darwin/amd64\n```\n\n下面设置go mod和go proxy\n\n```bash\ngo env -w GOBIN=/Users/youdi/go/bin\ngo env -w GO111MODULE=on\ngo env -w GOPROXY=https://goproxy.cn,direct // 使用七牛云的\n```\n\n注意： go env -w会将配置写到  `GOENV=\"/Users/youdi/Library/Application Support/go/env\"`\n\n\n下面看下我的配置\n\n\n```\nGO111MODULE=\"on\"\nGOARCH=\"amd64\"\nGOBIN=\"/Users/youdi/go/bin\"\nGOCACHE=\"/Users/youdi/Library/Caches/go-build\"\nGOENV=\"/Users/youdi/Library/Application Support/go/env\"\nGOEXE=\"\"\nGOFLAGS=\"\"\nGOHOSTARCH=\"amd64\"\nGOHOSTOS=\"darwin\"\nGOINSECURE=\"\"\nGONOPROXY=\"\"\nGONOSUMDB=\"\"\nGOOS=\"darwin\"\nGOPATH=\"/Users/youdi/go\"\nGOPRIVATE=\"\"\nGOPROXY=\"https://goproxy.cn,direct\"\nGOROOT=\"/usr/local/go\"\nGOSUMDB=\"off\"\nGOTMPDIR=\"\"\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\nGCCGO=\"gccgo\"\nAR=\"ar\"\nCC=\"clang\"\nCXX=\"clang++\"\nCGO_ENABLED=\"1\"\nGOMOD=\"/dev/null\"\nCGO_CFLAGS=\"-g -O2\"\nCGO_CPPFLAGS=\"\"\nCGO_CXXFLAGS=\"-g -O2\"\nCGO_FFLAGS=\"-g -O2\"\nCGO_LDFLAGS=\"-g -O2\"\nPKG_CONFIG=\"pkg-config\"\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/8m/v_1j4dgs7rzgqq4p_4_8k_nr0000gn/T/go-build221113671=/tmp/go-build -gno-record-gcc-switches -fno-common\"\n\n```\n\n\n我们看一下，我修改的内容\n\ncat /Users/youdi/Library/Application Support/go/env\n\n```bash\nGO111MODULE=on\nGOBIN=/Users/youdi/go/bin\nGOPROXY=https://goproxy.cn,direct\nGOSUMDB=off\n```\n\n\n### GO111MODULE\nGO111MODULE 有三个值：off, on和auto（默认值）。\n\nGO111MODULE=off，go命令行将不会支持module功能，寻找依赖包的方式将会沿用旧版本那种通过vendor目录或者GOPATH模式来查找。\nGO111MODULE=on，go命令行会使用modules，而一点也不会去GOPATH目录下查找。\nGO111MODULE=auto，默认值，go命令行将会根据当前目录来决定是否启用module功能。这种情况下可以分为两种情形：\n\n    当前目录在GOPATH/src之外且该目录包含go.mod文件\n    当前文件在包含go.mod文件的目录下面。\n\n当modules功能启用时，依赖包的存放位置变更为$GOPATH/pkg，允许同一个package多个版本并存，且多个项目可以共享缓存的 module\n\n我们看下目录：\n\ncd /Users/youdi/go/pkg\n```\n├── darwin_amd64\n│   ├── github.com\n│   ├── go.etcd.io\n│   ├── golang\n│   ├── golang.org\n│   ├── gopkg.in\n│   ├── quickstart\n│   └── uc.a\n├── mod\n│   ├── cache\n│   ├── github.com\n│   ├── golang.org\n│   ├── google.golang.org\n│   └── gopkg.in\n└── sumdb\n    └── sum.golang.org\n```\n\n\n### go mod命令\n\ngolang 提供了 `go mod`命令来管理包。\n\n\ngo help mod\n```bash\n\nGo mod provides access to operations on modules.\n\nNote that support for modules is built into all the go commands,\nnot just 'go mod'. For example, day-to-day adding, removing, upgrading,\nand downgrading of dependencies should be done using 'go get'.\nSee 'go help modules' for an overview of module functionality.\n\nUsage:\n\n\tgo mod <command> [arguments]\n\nThe commands are:\n\n\tdownload    download modules to local cache\n\tedit        edit go.mod from tools or scripts\n\tgraph       print module requirement graph\n\tinit        initialize new module in current directory\n\ttidy        add missing and remove unused modules\n\tvendor      make vendored copy of dependencies\n\tverify      verify dependencies have expected content\n\twhy         explain why packages or modules are needed\n\nUse \"go help mod <command>\" for more information about a command.\n\n```\n\ngo mod 有以下命令：\n\n| 命令     | 说明                                                         |\n| -------- | ------------------------------------------------------------ |\n| download | download modules to local cache(下载依赖包)                  |\n| edit     | edit go.mod from tools or scripts（编辑go.mod)                |\n| graph    | print module requirement graph (打印模块依赖图)              |\n| verify     | initialize new module in current directory（在当前目录初始化mod） |\n| tidy     | add missing and remove unused modules(拉取缺少的模块，移除不用的模块) |\n| vendor   | make vendored copy of dependencies(将依赖复制到vendor下)     |\n| verify   | verify dependencies have expected content (验证依赖是否正确） |\n| why      | explain why packages or modules are needed(解释为什么需要依赖) |\n\n比较常用的是 `init`,`tidy`, `edit`\n\n\n### 使用go mod管理一个新项目\n\n#### 1. 初始化项目\n可以随便找一个目录创建项目，我使用习惯用IDEA进行创建\n```bash\nmkdir Gone\ncd Gone\ngo mod init Gone\n```\n\n查看一下 go.mod文件\n\n```go\nmodule Gone\n\ngo 1.14\n```\n\ngo.mod文件一旦创建后，它的内容将会被go toolchain全面掌控。go toolchain会在各类命令执行时，比如go get、go build、go mod等修改和维护go.mod文件。\n\n\ngo.mod 提供了module, require、replace和exclude 四个命令\n\n- `module` 语句指定包的名字（路径）\n- `require` 语句指定的依赖项模块\n- `replace` 语句可以替换依赖项模块\n- `exclude` 语句可以忽略依赖项模块\n\n#### 2. 添加依赖\n\n创建 main.go文件\n\n```go\npackage main\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\tr.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.JSON(200, gin.H{\n\t\t\t\"message\": \"pong\",\n\t\t})\n\t})\n\tr.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")\n}\n```\n\n\n执行 go run main.go 运行代码会发现 go mod 会自动查找依赖自动下载\n再查看 `go.mod`\n\n```bash\nmodule Gone\n\ngo 1.14\n\nrequire github.com/gin-gonic/gin v1.6.3\n```\ngo module 安装 package 的原則是先拉最新的 release tag，若无tag则拉最新的commit\n\ngo 会自动生成一个 go.sum 文件来记录 dependency tree\n\n\n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/JhSGHb.jpg)\n\n再次执行脚本 go run main.go发现跳过了检查并安装依赖的步骤。\n\n可以使用命令 go list -m -u all 来检查可以升级的package，使用go get -u need-upgrade-package 升级后会将新的依赖版本更新到go.mod * 也可以使用 go get -u 升级所有依赖\n\n去mod包缓存下看看\n\n```bash\n/Users/youdi/go/pkg/mod/github.com/gin-gonic/gin@v1.6.3\n```\n\n\n### go get升级\n\n* 运行 go get -u 将会升级到最新的次要版本或者修订版本(x.y.z, z是修订版本号， y是次要版本号)\n* 运行 go get -u=patch 将会升级到最新的修订版本\n* 运行 go get package@version 将会升级到指定的版本号version\n* 运行go get如果有版本的更改，那么go.mod文件也会更改\n\n\n### 使用replace替换无法直接获取的package\n由于某些已知的原因，并不是所有的package都能成功下载，比如：golang.org下的包。\n\nmodules 可以通过在 go.mod 文件中使用 replace 指令替换成github上对应的库，比如：\n\n```go\nreplace (\n\tgolang.org/x/crypto v0.0.0-20190313024323-a1f597ede03a => github.com/golang/crypto v0.0.0-20190313024323-a1f597ede03a\n)\n```\n\n### go mod发布和使用\n\n参考Roberto Selbach写的go mod入门文章，文末，我给出链接\n\n\n### Creating a Module\n如果你设置好go mod了，那你就可以在任何目录下随便创建\n\n```bash\n$mkdir gomodone\n$cd gomodone\n```\n在这个目录下创建一个文件`say.go`\n\n```go\npackage gomodone\n\nimport \"fmt\" \n\n// say Hi to someone\nfunc SayHi(name string) string {\n   return fmt.Sprintf(\"Hi, %s\", name)\n}\n\n```\n\n初始化一个 `go.mod`文件\n\n```bash\n$ go mod init github.com/jacksonyoudi/gomodone\ngo: creating new go.mod: module github.com/jacksonyoudi/gomodone\n```\n查看 go.mod内容如下：\n\n```go\ngithub.com/jacksonyoudi/gomodone\ngo 1.14\n```\n\n下面我们要将这个module发布到github上，然后在另外一个程序使用\n\n```bash\n$git init\n$vim .gitiiignore\n$git commit -am \"init\"\n// github创建对应的repo\n$git remote add origin git@github.com:jacksonyoudi/gomodone.git\n$git push -u origin master\n```\n\n执行完，上面我们就相当于发布完了。\n\n如果有人需要使用，就可以使用\n```bash\ngo get github.com/jacksonyoudi/gomodone\n```\n这个时候没有加tag，所以，没有版本的控制。默认是v0.0.0后面接上时间和commitid。如下：\n\n```bash\ngomodone@v0.0.0-20200517004046-ee882713fd1e\n```\n\n官方不建议这样做，没有进行版本控制管理。\n\n\n### module versioning\n使用tag，进行版本控制\n\n#### making a release\n\n```bash\ngit tag v1.0.0\ngit push --tags\n```\n操作完，我们的module就发布了一个v1.0.0的版本了。\n\n推荐在这个状态下，再切出一个分支，用于后续v1.0.0的修复推送,不要直接在master分支修复\n```bash\n$git checkout -b v1\n$git push -u origin v1\n```\n\n\n### use our module\n上面已经发布了一个v1.0.0的版本，我们可以在另一个项目中使用，创建一个go的项目\n\n```bash\n$mkdir Gone\n$cd Gone\n$vim main.go\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/jacksonyoudi/gomodone\"\n)\n\nfunc main() {\n\tfmt.Println(gomodone.SayHi(\"Roberto\"))\n}\n```\n\n代码写好了，我们生成 go mod文件\n\n```bash\ngo mod init Gone\n```\n上面命令执行完，会生成 go mod文件\n看下mod文件：\n\n```bash\nmodule Gone\n\ngo 1.14\n\nrequire (\n\tgithub.com/jacksonyoudi/gomodone v1.0.0\n)\n```\n\n\n```bash\n$go mod tidy\ngo: finding module for package github.com/jacksonyoudi/gomodone\ngo: found github.com/jacksonyoudi/gomodone in github.com/jacksonyoudi/gomodone v1.0.0\n```\n同时还生成了go.sum, 其中包含软件包的哈希值，以确保我们具有正确的版本和文件。\n\n```bash\ngithub.com/jacksonyoudi/gomodone v1.0.1 h1:jFd+qZlAB0R3zqrC9kwO8IgPrAdayMUS0rSHMDc/uG8=\ngithub.com/jacksonyoudi/gomodone v1.0.1/go.mod h1:XWi+BLbuiuC2YM8Qz4yQzTSPtHt3T3hrlNN2pNlyA94=\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0 h1:GpzGeXCx/Xv2ueiZJ8hEhFwLu7xjxLBjkOYSmg8Ya/w=\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0/go.mod h1:L8uFPSZNHoAhpaePWUfKmGinjufYdw9c2i70xtBorSw=\n```\n这个内容是下面的，需要操作执行的结果\n\n\n\ngo run main.go就可以运行了\n\n### Making a bugfix release\n\n假如fix一个bug,我们在v1版本上进行修复\n\n修改代码如下：\n\n```go\n// say Hi to someone\nfunc SayHi(name string) string {\n-       return fmt.Sprintf(\"Hi, %s\", name)\n+       return fmt.Sprintf(\"Hi, %s!\", name)\n}\n```\n\n修复好，我们开始push\n\n```bash\n$ git commit -m \"Emphasize our friendliness\" say.go\n$ git tag v1.0.1\n$ git push --tags origin v1\n```\n\n#### Updating modules\n刚才fix bug，所以要在我们使用项目中更新\n\n这个需要我们手动执行更新module操作\n\n我们通过使用我们的好朋友来做到这一点go get：\n\n- 运行  `go get -u` 以使用最新的  minor  版本或修补程序版本（即它将从1.0.0更新到例如1.0.1，或者，如果可用，则更新为1.1.0）\n- 运行  go get -u=patch 以使用最新的  修补程序  版本（即，将更新为1.0.1但不更新  为1.1.0）\n- 运行go get package@version 以更新到特定版本（例如github.com/jacksonyoudi/gomodone@v1.0.1）\n\n目前module最新的也是v1.0.1\n\n```bash\n// 更新最新\n$go get -u\n$go get -u=patch\n//指定包，指定版本\n$go get github.com/jacksonyoudi/gomodone@v1.0.1\n```\n操作完，go.mod文件会修改如下:\n\n```go\nmodule Gone\n\ngo 1.14\n\nrequire (\n\tgithub.com/jacksonyoudi/gomodone v1.0.1\n)\n```\n\n\n\n#### Major versions\n根据语义版本语义，主要版本与次要版本  不同。主要版本可能会破坏向后兼容性。从Go模块的角度来看，主要版本是  完全不同的软件包。乍一看这听起来很奇怪，但这是有道理的：两个不兼容的库版本是两个不同的库。\n比如下面修改，完全破坏了兼容性。\n\n```go\npackage gomodone\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n)\n\n// Hi returns a friendly greeting\n// Hi returns a friendly greeting in language lang\nfunc SayHi(name, lang string) (string, error) {\n\tswitch lang {\n\tcase \"en\":\n\t\treturn fmt.Sprintf(\"Hi, %s!\", name), nil\n\tcase \"pt\":\n\t\treturn fmt.Sprintf(\"Oi, %s!\", name), nil\n\tcase \"es\":\n\t\treturn fmt.Sprintf(\"¡Hola, %s!\", name), nil\n\tcase \"fr\":\n\t\treturn fmt.Sprintf(\"Bonjour, %s!\", name), nil\n\tdefault:\n\t\treturn \"\", errors.New(\"unknown language\")\n\t}\n}\n```\n\n\n如上，我们需要不同的大版本，这种情况下\n\n修改 go.mod如下\n\n```go\nmodule github.com/jacksonyoudi/gomodone/v2\n\ngo 1.14\n```\n\n然后，重新tag，push\n\n```bash\n$ git commit say.go -m \"Change Hi to allow multilang\"\n$ git checkout -b v2 # 用于v2版本，后续修复v2\n$ git commit go.mod -m \"Bump version to v2\"\n$ git tag v2.0.0\n$ git push --tags origin v2 \n```\n\n### Updating to a major version\n即使发布了库的新不兼容版本，现有软件 也不会中断，因为它将继续使用现有版本1.0.1。go get -u 将不会获得版本2.0.0。\n如果想使用v2.0.0,代码改成如下：\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n    \"github.com/jacksonyoudi/gomodone/v2\"\n)\n\nfunc main() {\n\tg, err := gomodone.SayHi(\"Roberto\", \"pt\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(g)\n}\n```\n执行 go mod tidy\n\n```bash\ngo: finding module for package github.com/jacksonyoudi/gomodone/v2\ngo: downloading github.com/jacksonyoudi/gomodone/v2 v2.0.0\ngo: found github.com/jacksonyoudi/gomodone/v2 in github.com/jacksonyoudi/gomodone/v2 v2.0.0\n```\n\n当然，两个版本都可以同时使用, 使用别名\n如下：\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/jacksonyoudi/gomodone\"\n\tmv2 \"github.com/jacksonyoudi/gomodone/v2\"\n)\n\nfunc main() {\n\tg, err := mv2.SayHi(\"Roberto\", \"pt\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(g)\n\n\tfmt.Println(gomodone.SayHi(\"Roberto\"))\n}\n\n```\n\n执行一下 `go mod tidy`\n\n### Vendoring\n\n默认是忽略vendor的，如果想在项目目录下有vendor可以执行下面命令\n```\n$go vendor\n```\n\n当然，如果构建程序的时候，希望使用vendor中的依赖，\n\n```go\n$ go build -mod vendor\n```\n\n\n### IDEA下开发GO\n\n1. 创建go项目\n\n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/IqR0yI.jpg)\n\n2. 创建完项目，会自动生成go mod文件\n   如果需要修改，可以手动修改，加入git等操作\n\n3. 写业务逻辑代码\n   \n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/ZNN4tE.jpg)\n4. 解决依赖，更新go.mod\n\n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/CxoGM9.jpg)\n\n5. go build\n","source":"_posts/go-mod-use.md","raw":"---\ntitle: go mod使用\ndate: 2021-07-31 15:45:52\nimg: https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/PuXsa5.jpg\ntop: true\nhide: false\ncover: true\ncoverImg: https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/YDsDmh.jpg\ntoc: true\nmathjax: false\nsummary: 本文很细致的介绍go mod使用，一步一步代码完全掌握go mod，深入学习\ncategories: go\ntags:\n-  go\n- tool\n- language\n\n\n---\n\n\n最近由于换工作，开始交接工作。整理以前的工作内容，由于组内就我一个在做go和大数据。 所以开发没有规划，当时是怎么快怎么来。go也是使用最传统的go path的方式管理的。都是手动管理依赖的。现在交接给他人，需要多人开发，发现很多问题。比如版本问题，各种依赖的问题等等。\n\n由于工作原因，几乎所有主流语言都写过。所以，对应语言包管理工具也都了解和使用过。我前面有写过maven的使用。\nmaven是使用过的功能最强大的包管理工具了，maven定位是项目管理工具。pip和npm都是及格的产品。\n\n我个人觉得，一个包管理工具应该有以下功能：\n\n### 基本功能\n1. 依赖管理\n2. 依赖包版本控制\n3. 对应的包管理平台\n4. 可以私有化部署\n\n加分：\n5. 代码包是否可以复用\n6. 构建，测试,打包\n7. 发布上线\n\n\n对比上面几点：\n目前做的最好的也就 maven了，gradle没有使用过，不知道。\n\n\n今天主角是go mod，先来谈谈没有使用go mod之前的问题。\n\n### 使用go path问题\n1. 代码开发必须在go path src目录下，不然，就有问题。\n2. 依赖手动管理\n3. 依赖包没有版本可言\n\n从这个看， go path不算包管理工具\n\n### govendor\n1. 解决了包依赖，一个配置文件就管理\n2. 依赖包全都下载到项目vendor下，每个项目都把有一份。拉取项目时,开始怀疑人生。\n\n\n\n\n### go mod介绍\ngo modules 是 golang 1.11 新加的特性。现在1.12 已经发布了，是时候用起来了。Modules官方定义为：\n> 模块是相关Go包的集合。modules是源代码交换和版本控制的单元。 go命令直接支持使用modules，包括记录和解析对其他模块的依赖性。modules替换旧的基于GOPATH的方法来指定在给定构建中使用哪些源文件。\n\n\n### 如何使用go mod\n首先，必须升级go到1.11,目前版本是1.14\n下面我以我自己升级演示：\n\n```bash\n\n### 卸载旧版本，删除对应文件\nbrew uninstall -f go\n\n### 更新一下brew\n\nbrew update\n\n\n### 安装go\nbrew install go\n```\n\n上面升级完了，使用 `go version`看下版本\n```\ngo version go1.14.1 darwin/amd64\n```\n\n下面设置go mod和go proxy\n\n```bash\ngo env -w GOBIN=/Users/youdi/go/bin\ngo env -w GO111MODULE=on\ngo env -w GOPROXY=https://goproxy.cn,direct // 使用七牛云的\n```\n\n注意： go env -w会将配置写到  `GOENV=\"/Users/youdi/Library/Application Support/go/env\"`\n\n\n下面看下我的配置\n\n\n```\nGO111MODULE=\"on\"\nGOARCH=\"amd64\"\nGOBIN=\"/Users/youdi/go/bin\"\nGOCACHE=\"/Users/youdi/Library/Caches/go-build\"\nGOENV=\"/Users/youdi/Library/Application Support/go/env\"\nGOEXE=\"\"\nGOFLAGS=\"\"\nGOHOSTARCH=\"amd64\"\nGOHOSTOS=\"darwin\"\nGOINSECURE=\"\"\nGONOPROXY=\"\"\nGONOSUMDB=\"\"\nGOOS=\"darwin\"\nGOPATH=\"/Users/youdi/go\"\nGOPRIVATE=\"\"\nGOPROXY=\"https://goproxy.cn,direct\"\nGOROOT=\"/usr/local/go\"\nGOSUMDB=\"off\"\nGOTMPDIR=\"\"\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\nGCCGO=\"gccgo\"\nAR=\"ar\"\nCC=\"clang\"\nCXX=\"clang++\"\nCGO_ENABLED=\"1\"\nGOMOD=\"/dev/null\"\nCGO_CFLAGS=\"-g -O2\"\nCGO_CPPFLAGS=\"\"\nCGO_CXXFLAGS=\"-g -O2\"\nCGO_FFLAGS=\"-g -O2\"\nCGO_LDFLAGS=\"-g -O2\"\nPKG_CONFIG=\"pkg-config\"\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/8m/v_1j4dgs7rzgqq4p_4_8k_nr0000gn/T/go-build221113671=/tmp/go-build -gno-record-gcc-switches -fno-common\"\n\n```\n\n\n我们看一下，我修改的内容\n\ncat /Users/youdi/Library/Application Support/go/env\n\n```bash\nGO111MODULE=on\nGOBIN=/Users/youdi/go/bin\nGOPROXY=https://goproxy.cn,direct\nGOSUMDB=off\n```\n\n\n### GO111MODULE\nGO111MODULE 有三个值：off, on和auto（默认值）。\n\nGO111MODULE=off，go命令行将不会支持module功能，寻找依赖包的方式将会沿用旧版本那种通过vendor目录或者GOPATH模式来查找。\nGO111MODULE=on，go命令行会使用modules，而一点也不会去GOPATH目录下查找。\nGO111MODULE=auto，默认值，go命令行将会根据当前目录来决定是否启用module功能。这种情况下可以分为两种情形：\n\n    当前目录在GOPATH/src之外且该目录包含go.mod文件\n    当前文件在包含go.mod文件的目录下面。\n\n当modules功能启用时，依赖包的存放位置变更为$GOPATH/pkg，允许同一个package多个版本并存，且多个项目可以共享缓存的 module\n\n我们看下目录：\n\ncd /Users/youdi/go/pkg\n```\n├── darwin_amd64\n│   ├── github.com\n│   ├── go.etcd.io\n│   ├── golang\n│   ├── golang.org\n│   ├── gopkg.in\n│   ├── quickstart\n│   └── uc.a\n├── mod\n│   ├── cache\n│   ├── github.com\n│   ├── golang.org\n│   ├── google.golang.org\n│   └── gopkg.in\n└── sumdb\n    └── sum.golang.org\n```\n\n\n### go mod命令\n\ngolang 提供了 `go mod`命令来管理包。\n\n\ngo help mod\n```bash\n\nGo mod provides access to operations on modules.\n\nNote that support for modules is built into all the go commands,\nnot just 'go mod'. For example, day-to-day adding, removing, upgrading,\nand downgrading of dependencies should be done using 'go get'.\nSee 'go help modules' for an overview of module functionality.\n\nUsage:\n\n\tgo mod <command> [arguments]\n\nThe commands are:\n\n\tdownload    download modules to local cache\n\tedit        edit go.mod from tools or scripts\n\tgraph       print module requirement graph\n\tinit        initialize new module in current directory\n\ttidy        add missing and remove unused modules\n\tvendor      make vendored copy of dependencies\n\tverify      verify dependencies have expected content\n\twhy         explain why packages or modules are needed\n\nUse \"go help mod <command>\" for more information about a command.\n\n```\n\ngo mod 有以下命令：\n\n| 命令     | 说明                                                         |\n| -------- | ------------------------------------------------------------ |\n| download | download modules to local cache(下载依赖包)                  |\n| edit     | edit go.mod from tools or scripts（编辑go.mod)                |\n| graph    | print module requirement graph (打印模块依赖图)              |\n| verify     | initialize new module in current directory（在当前目录初始化mod） |\n| tidy     | add missing and remove unused modules(拉取缺少的模块，移除不用的模块) |\n| vendor   | make vendored copy of dependencies(将依赖复制到vendor下)     |\n| verify   | verify dependencies have expected content (验证依赖是否正确） |\n| why      | explain why packages or modules are needed(解释为什么需要依赖) |\n\n比较常用的是 `init`,`tidy`, `edit`\n\n\n### 使用go mod管理一个新项目\n\n#### 1. 初始化项目\n可以随便找一个目录创建项目，我使用习惯用IDEA进行创建\n```bash\nmkdir Gone\ncd Gone\ngo mod init Gone\n```\n\n查看一下 go.mod文件\n\n```go\nmodule Gone\n\ngo 1.14\n```\n\ngo.mod文件一旦创建后，它的内容将会被go toolchain全面掌控。go toolchain会在各类命令执行时，比如go get、go build、go mod等修改和维护go.mod文件。\n\n\ngo.mod 提供了module, require、replace和exclude 四个命令\n\n- `module` 语句指定包的名字（路径）\n- `require` 语句指定的依赖项模块\n- `replace` 语句可以替换依赖项模块\n- `exclude` 语句可以忽略依赖项模块\n\n#### 2. 添加依赖\n\n创建 main.go文件\n\n```go\npackage main\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc main() {\n\tr := gin.Default()\n\tr.GET(\"/ping\", func(c *gin.Context) {\n\t\tc.JSON(200, gin.H{\n\t\t\t\"message\": \"pong\",\n\t\t})\n\t})\n\tr.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")\n}\n```\n\n\n执行 go run main.go 运行代码会发现 go mod 会自动查找依赖自动下载\n再查看 `go.mod`\n\n```bash\nmodule Gone\n\ngo 1.14\n\nrequire github.com/gin-gonic/gin v1.6.3\n```\ngo module 安装 package 的原則是先拉最新的 release tag，若无tag则拉最新的commit\n\ngo 会自动生成一个 go.sum 文件来记录 dependency tree\n\n\n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/JhSGHb.jpg)\n\n再次执行脚本 go run main.go发现跳过了检查并安装依赖的步骤。\n\n可以使用命令 go list -m -u all 来检查可以升级的package，使用go get -u need-upgrade-package 升级后会将新的依赖版本更新到go.mod * 也可以使用 go get -u 升级所有依赖\n\n去mod包缓存下看看\n\n```bash\n/Users/youdi/go/pkg/mod/github.com/gin-gonic/gin@v1.6.3\n```\n\n\n### go get升级\n\n* 运行 go get -u 将会升级到最新的次要版本或者修订版本(x.y.z, z是修订版本号， y是次要版本号)\n* 运行 go get -u=patch 将会升级到最新的修订版本\n* 运行 go get package@version 将会升级到指定的版本号version\n* 运行go get如果有版本的更改，那么go.mod文件也会更改\n\n\n### 使用replace替换无法直接获取的package\n由于某些已知的原因，并不是所有的package都能成功下载，比如：golang.org下的包。\n\nmodules 可以通过在 go.mod 文件中使用 replace 指令替换成github上对应的库，比如：\n\n```go\nreplace (\n\tgolang.org/x/crypto v0.0.0-20190313024323-a1f597ede03a => github.com/golang/crypto v0.0.0-20190313024323-a1f597ede03a\n)\n```\n\n### go mod发布和使用\n\n参考Roberto Selbach写的go mod入门文章，文末，我给出链接\n\n\n### Creating a Module\n如果你设置好go mod了，那你就可以在任何目录下随便创建\n\n```bash\n$mkdir gomodone\n$cd gomodone\n```\n在这个目录下创建一个文件`say.go`\n\n```go\npackage gomodone\n\nimport \"fmt\" \n\n// say Hi to someone\nfunc SayHi(name string) string {\n   return fmt.Sprintf(\"Hi, %s\", name)\n}\n\n```\n\n初始化一个 `go.mod`文件\n\n```bash\n$ go mod init github.com/jacksonyoudi/gomodone\ngo: creating new go.mod: module github.com/jacksonyoudi/gomodone\n```\n查看 go.mod内容如下：\n\n```go\ngithub.com/jacksonyoudi/gomodone\ngo 1.14\n```\n\n下面我们要将这个module发布到github上，然后在另外一个程序使用\n\n```bash\n$git init\n$vim .gitiiignore\n$git commit -am \"init\"\n// github创建对应的repo\n$git remote add origin git@github.com:jacksonyoudi/gomodone.git\n$git push -u origin master\n```\n\n执行完，上面我们就相当于发布完了。\n\n如果有人需要使用，就可以使用\n```bash\ngo get github.com/jacksonyoudi/gomodone\n```\n这个时候没有加tag，所以，没有版本的控制。默认是v0.0.0后面接上时间和commitid。如下：\n\n```bash\ngomodone@v0.0.0-20200517004046-ee882713fd1e\n```\n\n官方不建议这样做，没有进行版本控制管理。\n\n\n### module versioning\n使用tag，进行版本控制\n\n#### making a release\n\n```bash\ngit tag v1.0.0\ngit push --tags\n```\n操作完，我们的module就发布了一个v1.0.0的版本了。\n\n推荐在这个状态下，再切出一个分支，用于后续v1.0.0的修复推送,不要直接在master分支修复\n```bash\n$git checkout -b v1\n$git push -u origin v1\n```\n\n\n### use our module\n上面已经发布了一个v1.0.0的版本，我们可以在另一个项目中使用，创建一个go的项目\n\n```bash\n$mkdir Gone\n$cd Gone\n$vim main.go\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/jacksonyoudi/gomodone\"\n)\n\nfunc main() {\n\tfmt.Println(gomodone.SayHi(\"Roberto\"))\n}\n```\n\n代码写好了，我们生成 go mod文件\n\n```bash\ngo mod init Gone\n```\n上面命令执行完，会生成 go mod文件\n看下mod文件：\n\n```bash\nmodule Gone\n\ngo 1.14\n\nrequire (\n\tgithub.com/jacksonyoudi/gomodone v1.0.0\n)\n```\n\n\n```bash\n$go mod tidy\ngo: finding module for package github.com/jacksonyoudi/gomodone\ngo: found github.com/jacksonyoudi/gomodone in github.com/jacksonyoudi/gomodone v1.0.0\n```\n同时还生成了go.sum, 其中包含软件包的哈希值，以确保我们具有正确的版本和文件。\n\n```bash\ngithub.com/jacksonyoudi/gomodone v1.0.1 h1:jFd+qZlAB0R3zqrC9kwO8IgPrAdayMUS0rSHMDc/uG8=\ngithub.com/jacksonyoudi/gomodone v1.0.1/go.mod h1:XWi+BLbuiuC2YM8Qz4yQzTSPtHt3T3hrlNN2pNlyA94=\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0 h1:GpzGeXCx/Xv2ueiZJ8hEhFwLu7xjxLBjkOYSmg8Ya/w=\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0/go.mod h1:L8uFPSZNHoAhpaePWUfKmGinjufYdw9c2i70xtBorSw=\n```\n这个内容是下面的，需要操作执行的结果\n\n\n\ngo run main.go就可以运行了\n\n### Making a bugfix release\n\n假如fix一个bug,我们在v1版本上进行修复\n\n修改代码如下：\n\n```go\n// say Hi to someone\nfunc SayHi(name string) string {\n-       return fmt.Sprintf(\"Hi, %s\", name)\n+       return fmt.Sprintf(\"Hi, %s!\", name)\n}\n```\n\n修复好，我们开始push\n\n```bash\n$ git commit -m \"Emphasize our friendliness\" say.go\n$ git tag v1.0.1\n$ git push --tags origin v1\n```\n\n#### Updating modules\n刚才fix bug，所以要在我们使用项目中更新\n\n这个需要我们手动执行更新module操作\n\n我们通过使用我们的好朋友来做到这一点go get：\n\n- 运行  `go get -u` 以使用最新的  minor  版本或修补程序版本（即它将从1.0.0更新到例如1.0.1，或者，如果可用，则更新为1.1.0）\n- 运行  go get -u=patch 以使用最新的  修补程序  版本（即，将更新为1.0.1但不更新  为1.1.0）\n- 运行go get package@version 以更新到特定版本（例如github.com/jacksonyoudi/gomodone@v1.0.1）\n\n目前module最新的也是v1.0.1\n\n```bash\n// 更新最新\n$go get -u\n$go get -u=patch\n//指定包，指定版本\n$go get github.com/jacksonyoudi/gomodone@v1.0.1\n```\n操作完，go.mod文件会修改如下:\n\n```go\nmodule Gone\n\ngo 1.14\n\nrequire (\n\tgithub.com/jacksonyoudi/gomodone v1.0.1\n)\n```\n\n\n\n#### Major versions\n根据语义版本语义，主要版本与次要版本  不同。主要版本可能会破坏向后兼容性。从Go模块的角度来看，主要版本是  完全不同的软件包。乍一看这听起来很奇怪，但这是有道理的：两个不兼容的库版本是两个不同的库。\n比如下面修改，完全破坏了兼容性。\n\n```go\npackage gomodone\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n)\n\n// Hi returns a friendly greeting\n// Hi returns a friendly greeting in language lang\nfunc SayHi(name, lang string) (string, error) {\n\tswitch lang {\n\tcase \"en\":\n\t\treturn fmt.Sprintf(\"Hi, %s!\", name), nil\n\tcase \"pt\":\n\t\treturn fmt.Sprintf(\"Oi, %s!\", name), nil\n\tcase \"es\":\n\t\treturn fmt.Sprintf(\"¡Hola, %s!\", name), nil\n\tcase \"fr\":\n\t\treturn fmt.Sprintf(\"Bonjour, %s!\", name), nil\n\tdefault:\n\t\treturn \"\", errors.New(\"unknown language\")\n\t}\n}\n```\n\n\n如上，我们需要不同的大版本，这种情况下\n\n修改 go.mod如下\n\n```go\nmodule github.com/jacksonyoudi/gomodone/v2\n\ngo 1.14\n```\n\n然后，重新tag，push\n\n```bash\n$ git commit say.go -m \"Change Hi to allow multilang\"\n$ git checkout -b v2 # 用于v2版本，后续修复v2\n$ git commit go.mod -m \"Bump version to v2\"\n$ git tag v2.0.0\n$ git push --tags origin v2 \n```\n\n### Updating to a major version\n即使发布了库的新不兼容版本，现有软件 也不会中断，因为它将继续使用现有版本1.0.1。go get -u 将不会获得版本2.0.0。\n如果想使用v2.0.0,代码改成如下：\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n    \"github.com/jacksonyoudi/gomodone/v2\"\n)\n\nfunc main() {\n\tg, err := gomodone.SayHi(\"Roberto\", \"pt\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(g)\n}\n```\n执行 go mod tidy\n\n```bash\ngo: finding module for package github.com/jacksonyoudi/gomodone/v2\ngo: downloading github.com/jacksonyoudi/gomodone/v2 v2.0.0\ngo: found github.com/jacksonyoudi/gomodone/v2 in github.com/jacksonyoudi/gomodone/v2 v2.0.0\n```\n\n当然，两个版本都可以同时使用, 使用别名\n如下：\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/jacksonyoudi/gomodone\"\n\tmv2 \"github.com/jacksonyoudi/gomodone/v2\"\n)\n\nfunc main() {\n\tg, err := mv2.SayHi(\"Roberto\", \"pt\")\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Println(g)\n\n\tfmt.Println(gomodone.SayHi(\"Roberto\"))\n}\n\n```\n\n执行一下 `go mod tidy`\n\n### Vendoring\n\n默认是忽略vendor的，如果想在项目目录下有vendor可以执行下面命令\n```\n$go vendor\n```\n\n当然，如果构建程序的时候，希望使用vendor中的依赖，\n\n```go\n$ go build -mod vendor\n```\n\n\n### IDEA下开发GO\n\n1. 创建go项目\n\n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/IqR0yI.jpg)\n\n2. 创建完项目，会自动生成go mod文件\n   如果需要修改，可以手动修改，加入git等操作\n\n3. 写业务逻辑代码\n   \n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/ZNN4tE.jpg)\n4. 解决依赖，更新go.mod\n\n![](https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/CxoGM9.jpg)\n\n5. go build\n","slug":"go-mod-use","published":1,"updated":"2021-07-31T08:17:20.027Z","_id":"ckrrhhxoo0000vluq5lqz2epe","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近由于换工作，开始交接工作。整理以前的工作内容，由于组内就我一个在做go和大数据。 所以开发没有规划，当时是怎么快怎么来。go也是使用最传统的go path的方式管理的。都是手动管理依赖的。现在交接给他人，需要多人开发，发现很多问题。比如版本问题，各种依赖的问题等等。</p>\n<p>由于工作原因，几乎所有主流语言都写过。所以，对应语言包管理工具也都了解和使用过。我前面有写过maven的使用。<br>maven是使用过的功能最强大的包管理工具了，maven定位是项目管理工具。pip和npm都是及格的产品。</p>\n<p>我个人觉得，一个包管理工具应该有以下功能：</p>\n<h3 id=\"基本功能\"><a href=\"#基本功能\" class=\"headerlink\" title=\"基本功能\"></a>基本功能</h3><ol>\n<li>依赖管理</li>\n<li>依赖包版本控制</li>\n<li>对应的包管理平台</li>\n<li>可以私有化部署</li>\n</ol>\n<p>加分：<br>5. 代码包是否可以复用<br>6. 构建，测试,打包<br>7. 发布上线</p>\n<p>对比上面几点：<br>目前做的最好的也就 maven了，gradle没有使用过，不知道。</p>\n<p>今天主角是go mod，先来谈谈没有使用go mod之前的问题。</p>\n<h3 id=\"使用go-path问题\"><a href=\"#使用go-path问题\" class=\"headerlink\" title=\"使用go path问题\"></a>使用go path问题</h3><ol>\n<li>代码开发必须在go path src目录下，不然，就有问题。</li>\n<li>依赖手动管理</li>\n<li>依赖包没有版本可言</li>\n</ol>\n<p>从这个看， go path不算包管理工具</p>\n<h3 id=\"govendor\"><a href=\"#govendor\" class=\"headerlink\" title=\"govendor\"></a>govendor</h3><ol>\n<li>解决了包依赖，一个配置文件就管理</li>\n<li>依赖包全都下载到项目vendor下，每个项目都把有一份。拉取项目时,开始怀疑人生。</li>\n</ol>\n<h3 id=\"go-mod介绍\"><a href=\"#go-mod介绍\" class=\"headerlink\" title=\"go mod介绍\"></a>go mod介绍</h3><p>go modules 是 golang 1.11 新加的特性。现在1.12 已经发布了，是时候用起来了。Modules官方定义为：</p>\n<blockquote>\n<p>模块是相关Go包的集合。modules是源代码交换和版本控制的单元。 go命令直接支持使用modules，包括记录和解析对其他模块的依赖性。modules替换旧的基于GOPATH的方法来指定在给定构建中使用哪些源文件。</p>\n</blockquote>\n<h3 id=\"如何使用go-mod\"><a href=\"#如何使用go-mod\" class=\"headerlink\" title=\"如何使用go mod\"></a>如何使用go mod</h3><p>首先，必须升级go到1.11,目前版本是1.14<br>下面我以我自己升级演示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token comment\">### 卸载旧版本，删除对应文件</span>\nbrew uninstall -f go\n\n<span class=\"token comment\">### 更新一下brew</span>\n\nbrew update\n\n\n<span class=\"token comment\">### 安装go</span>\nbrew <span class=\"token function\">install</span> go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面升级完了，使用 <code>go version</code>看下版本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">go version go1.14.1 darwin/amd64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下面设置go mod和go proxy</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GOBIN</span><span class=\"token operator\">=</span>/Users/youdi/go/bin\ngo <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span>on\ngo <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span>https://goproxy.cn,direct // 使用七牛云的<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>注意： go env -w会将配置写到  <code>GOENV=\"/Users/youdi/Library/Application Support/go/env\"</code></p>\n<p>下面看下我的配置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GO111MODULE=\"on\"\nGOARCH=\"amd64\"\nGOBIN=\"/Users/youdi/go/bin\"\nGOCACHE=\"/Users/youdi/Library/Caches/go-build\"\nGOENV=\"/Users/youdi/Library/Application Support/go/env\"\nGOEXE=\"\"\nGOFLAGS=\"\"\nGOHOSTARCH=\"amd64\"\nGOHOSTOS=\"darwin\"\nGOINSECURE=\"\"\nGONOPROXY=\"\"\nGONOSUMDB=\"\"\nGOOS=\"darwin\"\nGOPATH=\"/Users/youdi/go\"\nGOPRIVATE=\"\"\nGOPROXY=\"https://goproxy.cn,direct\"\nGOROOT=\"/usr/local/go\"\nGOSUMDB=\"off\"\nGOTMPDIR=\"\"\nGOTOOLDIR=\"/usr/local/go/pkg/tool/darwin_amd64\"\nGCCGO=\"gccgo\"\nAR=\"ar\"\nCC=\"clang\"\nCXX=\"clang++\"\nCGO_ENABLED=\"1\"\nGOMOD=\"/dev/null\"\nCGO_CFLAGS=\"-g -O2\"\nCGO_CPPFLAGS=\"\"\nCGO_CXXFLAGS=\"-g -O2\"\nCGO_FFLAGS=\"-g -O2\"\nCGO_LDFLAGS=\"-g -O2\"\nPKG_CONFIG=\"pkg-config\"\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/8m/v_1j4dgs7rzgqq4p_4_8k_nr0000gn/T/go-build221113671=/tmp/go-build -gno-record-gcc-switches -fno-common\"\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>我们看一下，我修改的内容</p>\n<p>cat /Users/youdi/Library/Application Support/go/env</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span>on\n<span class=\"token assign-left variable\">GOBIN</span><span class=\"token operator\">=</span>/Users/youdi/go/bin\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span>https://goproxy.cn,direct\n<span class=\"token assign-left variable\">GOSUMDB</span><span class=\"token operator\">=</span>off<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"GO111MODULE\"><a href=\"#GO111MODULE\" class=\"headerlink\" title=\"GO111MODULE\"></a>GO111MODULE</h3><p>GO111MODULE 有三个值：off, on和auto（默认值）。</p>\n<p>GO111MODULE=off，go命令行将不会支持module功能，寻找依赖包的方式将会沿用旧版本那种通过vendor目录或者GOPATH模式来查找。<br>GO111MODULE=on，go命令行会使用modules，而一点也不会去GOPATH目录下查找。<br>GO111MODULE=auto，默认值，go命令行将会根据当前目录来决定是否启用module功能。这种情况下可以分为两种情形：</p>\n<pre><code>当前目录在GOPATH/src之外且该目录包含go.mod文件\n当前文件在包含go.mod文件的目录下面。\n</code></pre>\n<p>当modules功能启用时，依赖包的存放位置变更为$GOPATH/pkg，允许同一个package多个版本并存，且多个项目可以共享缓存的 module</p>\n<p>我们看下目录：</p>\n<p>cd /Users/youdi/go/pkg</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">├── darwin_amd64\n│&nbsp;&nbsp; ├── github.com\n│&nbsp;&nbsp; ├── go.etcd.io\n│&nbsp;&nbsp; ├── golang\n│&nbsp;&nbsp; ├── golang.org\n│&nbsp;&nbsp; ├── gopkg.in\n│&nbsp;&nbsp; ├── quickstart\n│&nbsp;&nbsp; └── uc.a\n├── mod\n│&nbsp;&nbsp; ├── cache\n│&nbsp;&nbsp; ├── github.com\n│&nbsp;&nbsp; ├── golang.org\n│&nbsp;&nbsp; ├── google.golang.org\n│&nbsp;&nbsp; └── gopkg.in\n└── sumdb\n    └── sum.golang.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"go-mod命令\"><a href=\"#go-mod命令\" class=\"headerlink\" title=\"go mod命令\"></a>go mod命令</h3><p>golang 提供了 <code>go mod</code>命令来管理包。</p>\n<p>go help mod</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\nGo mod provides access to operations on modules.\n\nNote that support <span class=\"token keyword\">for</span> modules is built into all the go commands,\nnot just <span class=\"token string\">'go mod'</span><span class=\"token builtin class-name\">.</span> For example, day-to-day adding, removing, upgrading,\nand downgrading of dependencies should be <span class=\"token keyword\">done</span> using <span class=\"token string\">'go get'</span><span class=\"token builtin class-name\">.</span>\nSee <span class=\"token string\">'go help modules'</span> <span class=\"token keyword\">for</span> an overview of module functionality.\n\nUsage:\n\n\tgo mod <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span>\n\nThe commands are:\n\n\tdownload    download modules to <span class=\"token builtin class-name\">local</span> cache\n\tedit        edit go.mod from tools or scripts\n\tgraph       print module requirement graph\n\tinit        initialize new module <span class=\"token keyword\">in</span> current directory\n\ttidy        <span class=\"token function\">add</span> missing and remove unused modules\n\tvendor      <span class=\"token function\">make</span> vendored copy of dependencies\n\tverify      verify dependencies have expected content\n\twhy         explain why packages or modules are needed\n\nUse <span class=\"token string\">\"go help mod &lt;command&gt;\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information about a command.\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>go mod 有以下命令：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>download</td>\n<td>download modules to local cache(下载依赖包)</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>edit go.mod from tools or scripts（编辑go.mod)</td>\n</tr>\n<tr>\n<td>graph</td>\n<td>print module requirement graph (打印模块依赖图)</td>\n</tr>\n<tr>\n<td>verify</td>\n<td>initialize new module in current directory（在当前目录初始化mod）</td>\n</tr>\n<tr>\n<td>tidy</td>\n<td>add missing and remove unused modules(拉取缺少的模块，移除不用的模块)</td>\n</tr>\n<tr>\n<td>vendor</td>\n<td>make vendored copy of dependencies(将依赖复制到vendor下)</td>\n</tr>\n<tr>\n<td>verify</td>\n<td>verify dependencies have expected content (验证依赖是否正确）</td>\n</tr>\n<tr>\n<td>why</td>\n<td>explain why packages or modules are needed(解释为什么需要依赖)</td>\n</tr>\n</tbody></table>\n<p>比较常用的是 <code>init</code>,<code>tidy</code>, <code>edit</code></p>\n<h3 id=\"使用go-mod管理一个新项目\"><a href=\"#使用go-mod管理一个新项目\" class=\"headerlink\" title=\"使用go mod管理一个新项目\"></a>使用go mod管理一个新项目</h3><h4 id=\"1-初始化项目\"><a href=\"#1-初始化项目\" class=\"headerlink\" title=\"1. 初始化项目\"></a>1. 初始化项目</h4><p>可以随便找一个目录创建项目，我使用习惯用IDEA进行创建</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> Gone\n<span class=\"token builtin class-name\">cd</span> Gone\ngo mod init Gone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>查看一下 go.mod文件</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">module Gone\n\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>go.mod文件一旦创建后，它的内容将会被go toolchain全面掌控。go toolchain会在各类命令执行时，比如go get、go build、go mod等修改和维护go.mod文件。</p>\n<p>go.mod 提供了module, require、replace和exclude 四个命令</p>\n<ul>\n<li><code>module</code> 语句指定包的名字（路径）</li>\n<li><code>require</code> 语句指定的依赖项模块</li>\n<li><code>replace</code> 语句可以替换依赖项模块</li>\n<li><code>exclude</code> 语句可以忽略依赖项模块</li>\n</ul>\n<h4 id=\"2-添加依赖\"><a href=\"#2-添加依赖\" class=\"headerlink\" title=\"2. 添加依赖\"></a>2. 添加依赖</h4><p>创建 main.go文件</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tr <span class=\"token operator\">:=</span> gin<span class=\"token punctuation\">.</span><span class=\"token function\">Default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/ping\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"pong\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>执行 go run main.go 运行代码会发现 go mod 会自动查找依赖自动下载<br>再查看 <code>go.mod</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">module Gone\n\ngo <span class=\"token number\">1.14</span>\n\nrequire github.com/gin-gonic/gin v1.6.3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>go module 安装 package 的原則是先拉最新的 release tag，若无tag则拉最新的commit</p>\n<p>go 会自动生成一个 go.sum 文件来记录 dependency tree</p>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/JhSGHb.jpg\"></p>\n<p>再次执行脚本 go run main.go发现跳过了检查并安装依赖的步骤。</p>\n<p>可以使用命令 go list -m -u all 来检查可以升级的package，使用go get -u need-upgrade-package 升级后会将新的依赖版本更新到go.mod * 也可以使用 go get -u 升级所有依赖</p>\n<p>去mod包缓存下看看</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/Users/youdi/go/pkg/mod/github.com/gin-gonic/gin@v1.6.3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h3 id=\"go-get升级\"><a href=\"#go-get升级\" class=\"headerlink\" title=\"go get升级\"></a>go get升级</h3><ul>\n<li>运行 go get -u 将会升级到最新的次要版本或者修订版本(x.y.z, z是修订版本号， y是次要版本号)</li>\n<li>运行 go get -u=patch 将会升级到最新的修订版本</li>\n<li>运行 go get package@version 将会升级到指定的版本号version</li>\n<li>运行go get如果有版本的更改，那么go.mod文件也会更改</li>\n</ul>\n<h3 id=\"使用replace替换无法直接获取的package\"><a href=\"#使用replace替换无法直接获取的package\" class=\"headerlink\" title=\"使用replace替换无法直接获取的package\"></a>使用replace替换无法直接获取的package</h3><p>由于某些已知的原因，并不是所有的package都能成功下载，比如：golang.org下的包。</p>\n<p>modules 可以通过在 go.mod 文件中使用 replace 指令替换成github上对应的库，比如：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">replace <span class=\"token punctuation\">(</span>\n\tgolang<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>x<span class=\"token operator\">/</span>crypto v0<span class=\"token punctuation\">.</span><span class=\"token number\">0.0</span><span class=\"token operator\">-</span><span class=\"token number\">20190313024323</span><span class=\"token operator\">-</span>a1f597ede03a <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>golang<span class=\"token operator\">/</span>crypto v0<span class=\"token punctuation\">.</span><span class=\"token number\">0.0</span><span class=\"token operator\">-</span><span class=\"token number\">20190313024323</span><span class=\"token operator\">-</span>a1f597ede03a\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"go-mod发布和使用\"><a href=\"#go-mod发布和使用\" class=\"headerlink\" title=\"go mod发布和使用\"></a>go mod发布和使用</h3><p>参考Roberto Selbach写的go mod入门文章，文末，我给出链接</p>\n<h3 id=\"Creating-a-Module\"><a href=\"#Creating-a-Module\" class=\"headerlink\" title=\"Creating a Module\"></a>Creating a Module</h3><p>如果你设置好go mod了，那你就可以在任何目录下随便创建</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$mkdir</span> gomodone\n<span class=\"token variable\">$cd</span> gomodone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在这个目录下创建一个文件<code>say.go</code></p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> gomodone\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span> \n\n<span class=\"token comment\">// say Hi to someone</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>初始化一个 <code>go.mod</code>文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ go mod init github.com/jacksonyoudi/gomodone\ngo: creating new go.mod: module github.com/jacksonyoudi/gomodone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>查看 go.mod内容如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jacksonyoudi<span class=\"token operator\">/</span>gomodone\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>下面我们要将这个module发布到github上，然后在另外一个程序使用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> init\n<span class=\"token variable\">$vim</span> .gitiiignore\n<span class=\"token variable\">$git</span> commit -am <span class=\"token string\">\"init\"</span>\n// github创建对应的repo\n<span class=\"token variable\">$git</span> remote <span class=\"token function\">add</span> origin git@github.com:jacksonyoudi/gomodone.git\n<span class=\"token variable\">$git</span> push -u origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行完，上面我们就相当于发布完了。</p>\n<p>如果有人需要使用，就可以使用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go get github.com/jacksonyoudi/gomodone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这个时候没有加tag，所以，没有版本的控制。默认是v0.0.0后面接上时间和commitid。如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gomodone@v0.0.0-20200517004046-ee882713fd1e<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>官方不建议这样做，没有进行版本控制管理。</p>\n<h3 id=\"module-versioning\"><a href=\"#module-versioning\" class=\"headerlink\" title=\"module versioning\"></a>module versioning</h3><p>使用tag，进行版本控制</p>\n<h4 id=\"making-a-release\"><a href=\"#making-a-release\" class=\"headerlink\" title=\"making a release\"></a>making a release</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag v1.0.0\n<span class=\"token function\">git</span> push --tags<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>操作完，我们的module就发布了一个v1.0.0的版本了。</p>\n<p>推荐在这个状态下，再切出一个分支，用于后续v1.0.0的修复推送,不要直接在master分支修复</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> checkout -b v1\n<span class=\"token variable\">$git</span> push -u origin v1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"use-our-module\"><a href=\"#use-our-module\" class=\"headerlink\" title=\"use our module\"></a>use our module</h3><p>上面已经发布了一个v1.0.0的版本，我们可以在另一个项目中使用，创建一个go的项目</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$mkdir</span> Gone\n<span class=\"token variable\">$cd</span> Gone\n<span class=\"token variable\">$vim</span> main.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"github.com/jacksonyoudi/gomodone\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>gomodone<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码写好了，我们生成 go mod文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go mod init Gone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>上面命令执行完，会生成 go mod文件<br>看下mod文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">module Gone\n\ngo <span class=\"token number\">1.14</span>\n\nrequire <span class=\"token punctuation\">(</span>\n\tgithub.com/jacksonyoudi/gomodone v1.0.0\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$go</span> mod tidy\ngo: finding module <span class=\"token keyword\">for</span> package github.com/jacksonyoudi/gomodone\ngo: found github.com/jacksonyoudi/gomodone <span class=\"token keyword\">in</span> github.com/jacksonyoudi/gomodone v1.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>同时还生成了go.sum, 其中包含软件包的哈希值，以确保我们具有正确的版本和文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">github.com/jacksonyoudi/gomodone v1.0.1 h1:jFd+qZlAB0R3zqrC9kwO8IgPrAdayMUS0rSHMDc/uG8<span class=\"token operator\">=</span>\ngithub.com/jacksonyoudi/gomodone v1.0.1/go.mod h1:XWi+BLbuiuC2YM8Qz4yQzTSPtHt3T3hrlNN2pNlyA94<span class=\"token operator\">=</span>\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0 h1:GpzGeXCx/Xv2ueiZJ8hEhFwLu7xjxLBjkOYSmg8Ya/w<span class=\"token operator\">=</span>\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0/go.mod h1:L8uFPSZNHoAhpaePWUfKmGinjufYdw9c2i70xtBorSw<span class=\"token operator\">=</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个内容是下面的，需要操作执行的结果</p>\n<p>go run main.go就可以运行了</p>\n<h3 id=\"Making-a-bugfix-release\"><a href=\"#Making-a-bugfix-release\" class=\"headerlink\" title=\"Making a bugfix release\"></a>Making a bugfix release</h3><p>假如fix一个bug,我们在v1版本上进行修复</p>\n<p>修改代码如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// say Hi to someone</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">-</span>       <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">+</span>       <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修复好，我们开始push</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Emphasize our friendliness\"</span> say.go\n$ <span class=\"token function\">git</span> tag v1.0.1\n$ <span class=\"token function\">git</span> push --tags origin v1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Updating-modules\"><a href=\"#Updating-modules\" class=\"headerlink\" title=\"Updating modules\"></a>Updating modules</h4><p>刚才fix bug，所以要在我们使用项目中更新</p>\n<p>这个需要我们手动执行更新module操作</p>\n<p>我们通过使用我们的好朋友来做到这一点go get：</p>\n<ul>\n<li>运行  <code>go get -u</code> 以使用最新的  minor  版本或修补程序版本（即它将从1.0.0更新到例如1.0.1，或者，如果可用，则更新为1.1.0）</li>\n<li>运行  go get -u=patch 以使用最新的  修补程序  版本（即，将更新为1.0.1但不更新  为1.1.0）</li>\n<li>运行go get package@version 以更新到特定版本（例如github.com/jacksonyoudi/<a href=\"mailto:gomodone@v1.0.1\">gomodone@v1.0.1</a>）</li>\n</ul>\n<p>目前module最新的也是v1.0.1</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 更新最新\n<span class=\"token variable\">$go</span> get -u\n<span class=\"token variable\">$go</span> get -u<span class=\"token operator\">=</span>patch\n//指定包，指定版本\n<span class=\"token variable\">$go</span> get github.com/jacksonyoudi/gomodone@v1.0.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>操作完，go.mod文件会修改如下:</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">module Gone\n\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span>\n\nrequire <span class=\"token punctuation\">(</span>\n\tgithub<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jacksonyoudi<span class=\"token operator\">/</span>gomodone v1<span class=\"token punctuation\">.</span><span class=\"token number\">0.1</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"Major-versions\"><a href=\"#Major-versions\" class=\"headerlink\" title=\"Major versions\"></a>Major versions</h4><p>根据语义版本语义，主要版本与次要版本  不同。主要版本可能会破坏向后兼容性。从Go模块的角度来看，主要版本是  完全不同的软件包。乍一看这听起来很奇怪，但这是有道理的：两个不兼容的库版本是两个不同的库。<br>比如下面修改，完全破坏了兼容性。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> gomodone\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"errors\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Hi returns a friendly greeting</span>\n<span class=\"token comment\">// Hi returns a friendly greeting in language lang</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> lang <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> lang <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Oi, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"es\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"¡Hola, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"fr\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bonjour, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unknown language\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>如上，我们需要不同的大版本，这种情况下</p>\n<p>修改 go.mod如下</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">module github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jacksonyoudi<span class=\"token operator\">/</span>gomodone<span class=\"token operator\">/</span>v2\n\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>然后，重新tag，push</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit say.go -m <span class=\"token string\">\"Change Hi to allow multilang\"</span>\n$ <span class=\"token function\">git</span> checkout -b v2 <span class=\"token comment\"># 用于v2版本，后续修复v2</span>\n$ <span class=\"token function\">git</span> commit go.mod -m <span class=\"token string\">\"Bump version to v2\"</span>\n$ <span class=\"token function\">git</span> tag v2.0.0\n$ <span class=\"token function\">git</span> push --tags origin v2 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Updating-to-a-major-version\"><a href=\"#Updating-to-a-major-version\" class=\"headerlink\" title=\"Updating to a major version\"></a>Updating to a major version</h3><p>即使发布了库的新不兼容版本，现有软件 也不会中断，因为它将继续使用现有版本1.0.1。go get -u 将不会获得版本2.0.0。<br>如果想使用v2.0.0,代码改成如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"github.com/jacksonyoudi/gomodone/v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tg<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> gomodone<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行 go mod tidy</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go: finding module <span class=\"token keyword\">for</span> package github.com/jacksonyoudi/gomodone/v2\ngo: downloading github.com/jacksonyoudi/gomodone/v2 v2.0.0\ngo: found github.com/jacksonyoudi/gomodone/v2 <span class=\"token keyword\">in</span> github.com/jacksonyoudi/gomodone/v2 v2.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>当然，两个版本都可以同时使用, 使用别名<br>如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"github.com/jacksonyoudi/gomodone\"</span>\n\tmv2 <span class=\"token string\">\"github.com/jacksonyoudi/gomodone/v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tg<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> mv2<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>gomodone<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行一下 <code>go mod tidy</code></p>\n<h3 id=\"Vendoring\"><a href=\"#Vendoring\" class=\"headerlink\" title=\"Vendoring\"></a>Vendoring</h3><p>默认是忽略vendor的，如果想在项目目录下有vendor可以执行下面命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$go vendor<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>当然，如果构建程序的时候，希望使用vendor中的依赖，</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">$ <span class=\"token keyword\">go</span> build <span class=\"token operator\">-</span>mod vendor<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h3 id=\"IDEA下开发GO\"><a href=\"#IDEA下开发GO\" class=\"headerlink\" title=\"IDEA下开发GO\"></a>IDEA下开发GO</h3><ol>\n<li>创建go项目</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/IqR0yI.jpg\"></p>\n<ol start=\"2\">\n<li><p>创建完项目，会自动生成go mod文件<br>如果需要修改，可以手动修改，加入git等操作</p>\n</li>\n<li><p>写业务逻辑代码</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/ZNN4tE.jpg\"><br>4. 解决依赖，更新go.mod</p>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/CxoGM9.jpg\"></p>\n<ol start=\"5\">\n<li>go build</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>最近由于换工作，开始交接工作。整理以前的工作内容，由于组内就我一个在做go和大数据。 所以开发没有规划，当时是怎么快怎么来。go也是使用最传统的go path的方式管理的。都是手动管理依赖的。现在交接给他人，需要多人开发，发现很多问题。比如版本问题，各种依赖的问题等等。</p>\n<p>由于工作原因，几乎所有主流语言都写过。所以，对应语言包管理工具也都了解和使用过。我前面有写过maven的使用。<br>maven是使用过的功能最强大的包管理工具了，maven定位是项目管理工具。pip和npm都是及格的产品。</p>\n<p>我个人觉得，一个包管理工具应该有以下功能：</p>\n<h3 id=\"基本功能\"><a href=\"#基本功能\" class=\"headerlink\" title=\"基本功能\"></a>基本功能</h3><ol>\n<li>依赖管理</li>\n<li>依赖包版本控制</li>\n<li>对应的包管理平台</li>\n<li>可以私有化部署</li>\n</ol>\n<p>加分：<br>5. 代码包是否可以复用<br>6. 构建，测试,打包<br>7. 发布上线</p>\n<p>对比上面几点：<br>目前做的最好的也就 maven了，gradle没有使用过，不知道。</p>\n<p>今天主角是go mod，先来谈谈没有使用go mod之前的问题。</p>\n<h3 id=\"使用go-path问题\"><a href=\"#使用go-path问题\" class=\"headerlink\" title=\"使用go path问题\"></a>使用go path问题</h3><ol>\n<li>代码开发必须在go path src目录下，不然，就有问题。</li>\n<li>依赖手动管理</li>\n<li>依赖包没有版本可言</li>\n</ol>\n<p>从这个看， go path不算包管理工具</p>\n<h3 id=\"govendor\"><a href=\"#govendor\" class=\"headerlink\" title=\"govendor\"></a>govendor</h3><ol>\n<li>解决了包依赖，一个配置文件就管理</li>\n<li>依赖包全都下载到项目vendor下，每个项目都把有一份。拉取项目时,开始怀疑人生。</li>\n</ol>\n<h3 id=\"go-mod介绍\"><a href=\"#go-mod介绍\" class=\"headerlink\" title=\"go mod介绍\"></a>go mod介绍</h3><p>go modules 是 golang 1.11 新加的特性。现在1.12 已经发布了，是时候用起来了。Modules官方定义为：</p>\n<blockquote>\n<p>模块是相关Go包的集合。modules是源代码交换和版本控制的单元。 go命令直接支持使用modules，包括记录和解析对其他模块的依赖性。modules替换旧的基于GOPATH的方法来指定在给定构建中使用哪些源文件。</p>\n</blockquote>\n<h3 id=\"如何使用go-mod\"><a href=\"#如何使用go-mod\" class=\"headerlink\" title=\"如何使用go mod\"></a>如何使用go mod</h3><p>首先，必须升级go到1.11,目前版本是1.14<br>下面我以我自己升级演示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n<span class=\"token comment\">### 卸载旧版本，删除对应文件</span>\nbrew uninstall -f go\n\n<span class=\"token comment\">### 更新一下brew</span>\n\nbrew update\n\n\n<span class=\"token comment\">### 安装go</span>\nbrew <span class=\"token function\">install</span> go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面升级完了，使用 <code>go version</code>看下版本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">go version go1.14.1 darwin&#x2F;amd64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下面设置go mod和go proxy</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GOBIN</span><span class=\"token operator\">=</span>/Users/youdi/go/bin\ngo <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span>on\ngo <span class=\"token function\">env</span> -w <span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span>https://goproxy.cn,direct // 使用七牛云的<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>注意： go env -w会将配置写到  <code>GOENV=&quot;/Users/youdi/Library/Application Support/go/env&quot;</code></p>\n<p>下面看下我的配置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GO111MODULE&#x3D;&quot;on&quot;\nGOARCH&#x3D;&quot;amd64&quot;\nGOBIN&#x3D;&quot;&#x2F;Users&#x2F;youdi&#x2F;go&#x2F;bin&quot;\nGOCACHE&#x3D;&quot;&#x2F;Users&#x2F;youdi&#x2F;Library&#x2F;Caches&#x2F;go-build&quot;\nGOENV&#x3D;&quot;&#x2F;Users&#x2F;youdi&#x2F;Library&#x2F;Application Support&#x2F;go&#x2F;env&quot;\nGOEXE&#x3D;&quot;&quot;\nGOFLAGS&#x3D;&quot;&quot;\nGOHOSTARCH&#x3D;&quot;amd64&quot;\nGOHOSTOS&#x3D;&quot;darwin&quot;\nGOINSECURE&#x3D;&quot;&quot;\nGONOPROXY&#x3D;&quot;&quot;\nGONOSUMDB&#x3D;&quot;&quot;\nGOOS&#x3D;&quot;darwin&quot;\nGOPATH&#x3D;&quot;&#x2F;Users&#x2F;youdi&#x2F;go&quot;\nGOPRIVATE&#x3D;&quot;&quot;\nGOPROXY&#x3D;&quot;https:&#x2F;&#x2F;goproxy.cn,direct&quot;\nGOROOT&#x3D;&quot;&#x2F;usr&#x2F;local&#x2F;go&quot;\nGOSUMDB&#x3D;&quot;off&quot;\nGOTMPDIR&#x3D;&quot;&quot;\nGOTOOLDIR&#x3D;&quot;&#x2F;usr&#x2F;local&#x2F;go&#x2F;pkg&#x2F;tool&#x2F;darwin_amd64&quot;\nGCCGO&#x3D;&quot;gccgo&quot;\nAR&#x3D;&quot;ar&quot;\nCC&#x3D;&quot;clang&quot;\nCXX&#x3D;&quot;clang++&quot;\nCGO_ENABLED&#x3D;&quot;1&quot;\nGOMOD&#x3D;&quot;&#x2F;dev&#x2F;null&quot;\nCGO_CFLAGS&#x3D;&quot;-g -O2&quot;\nCGO_CPPFLAGS&#x3D;&quot;&quot;\nCGO_CXXFLAGS&#x3D;&quot;-g -O2&quot;\nCGO_FFLAGS&#x3D;&quot;-g -O2&quot;\nCGO_LDFLAGS&#x3D;&quot;-g -O2&quot;\nPKG_CONFIG&#x3D;&quot;pkg-config&quot;\nGOGCCFLAGS&#x3D;&quot;-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length&#x3D;0 -fdebug-prefix-map&#x3D;&#x2F;var&#x2F;folders&#x2F;8m&#x2F;v_1j4dgs7rzgqq4p_4_8k_nr0000gn&#x2F;T&#x2F;go-build221113671&#x3D;&#x2F;tmp&#x2F;go-build -gno-record-gcc-switches -fno-common&quot;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>我们看一下，我修改的内容</p>\n<p>cat /Users/youdi/Library/Application Support/go/env</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span>on\n<span class=\"token assign-left variable\">GOBIN</span><span class=\"token operator\">=</span>/Users/youdi/go/bin\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span>https://goproxy.cn,direct\n<span class=\"token assign-left variable\">GOSUMDB</span><span class=\"token operator\">=</span>off<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"GO111MODULE\"><a href=\"#GO111MODULE\" class=\"headerlink\" title=\"GO111MODULE\"></a>GO111MODULE</h3><p>GO111MODULE 有三个值：off, on和auto（默认值）。</p>\n<p>GO111MODULE=off，go命令行将不会支持module功能，寻找依赖包的方式将会沿用旧版本那种通过vendor目录或者GOPATH模式来查找。<br>GO111MODULE=on，go命令行会使用modules，而一点也不会去GOPATH目录下查找。<br>GO111MODULE=auto，默认值，go命令行将会根据当前目录来决定是否启用module功能。这种情况下可以分为两种情形：</p>\n<pre><code>当前目录在GOPATH/src之外且该目录包含go.mod文件\n当前文件在包含go.mod文件的目录下面。\n</code></pre>\n<p>当modules功能启用时，依赖包的存放位置变更为$GOPATH/pkg，允许同一个package多个版本并存，且多个项目可以共享缓存的 module</p>\n<p>我们看下目录：</p>\n<p>cd /Users/youdi/go/pkg</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">├── darwin_amd64\n│   ├── github.com\n│   ├── go.etcd.io\n│   ├── golang\n│   ├── golang.org\n│   ├── gopkg.in\n│   ├── quickstart\n│   └── uc.a\n├── mod\n│   ├── cache\n│   ├── github.com\n│   ├── golang.org\n│   ├── google.golang.org\n│   └── gopkg.in\n└── sumdb\n    └── sum.golang.org<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"go-mod命令\"><a href=\"#go-mod命令\" class=\"headerlink\" title=\"go mod命令\"></a>go mod命令</h3><p>golang 提供了 <code>go mod</code>命令来管理包。</p>\n<p>go help mod</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\nGo mod provides access to operations on modules.\n\nNote that support <span class=\"token keyword\">for</span> modules is built into all the go commands,\nnot just <span class=\"token string\">'go mod'</span><span class=\"token builtin class-name\">.</span> For example, day-to-day adding, removing, upgrading,\nand downgrading of dependencies should be <span class=\"token keyword\">done</span> using <span class=\"token string\">'go get'</span><span class=\"token builtin class-name\">.</span>\nSee <span class=\"token string\">'go help modules'</span> <span class=\"token keyword\">for</span> an overview of module functionality.\n\nUsage:\n\n\tgo mod <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span>\n\nThe commands are:\n\n\tdownload    download modules to <span class=\"token builtin class-name\">local</span> cache\n\tedit        edit go.mod from tools or scripts\n\tgraph       print module requirement graph\n\tinit        initialize new module <span class=\"token keyword\">in</span> current directory\n\ttidy        <span class=\"token function\">add</span> missing and remove unused modules\n\tvendor      <span class=\"token function\">make</span> vendored copy of dependencies\n\tverify      verify dependencies have expected content\n\twhy         explain why packages or modules are needed\n\nUse <span class=\"token string\">\"go help mod &lt;command>\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information about a command.\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>go mod 有以下命令：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>download</td>\n<td>download modules to local cache(下载依赖包)</td>\n</tr>\n<tr>\n<td>edit</td>\n<td>edit go.mod from tools or scripts（编辑go.mod)</td>\n</tr>\n<tr>\n<td>graph</td>\n<td>print module requirement graph (打印模块依赖图)</td>\n</tr>\n<tr>\n<td>verify</td>\n<td>initialize new module in current directory（在当前目录初始化mod）</td>\n</tr>\n<tr>\n<td>tidy</td>\n<td>add missing and remove unused modules(拉取缺少的模块，移除不用的模块)</td>\n</tr>\n<tr>\n<td>vendor</td>\n<td>make vendored copy of dependencies(将依赖复制到vendor下)</td>\n</tr>\n<tr>\n<td>verify</td>\n<td>verify dependencies have expected content (验证依赖是否正确）</td>\n</tr>\n<tr>\n<td>why</td>\n<td>explain why packages or modules are needed(解释为什么需要依赖)</td>\n</tr>\n</tbody></table>\n<p>比较常用的是 <code>init</code>,<code>tidy</code>, <code>edit</code></p>\n<h3 id=\"使用go-mod管理一个新项目\"><a href=\"#使用go-mod管理一个新项目\" class=\"headerlink\" title=\"使用go mod管理一个新项目\"></a>使用go mod管理一个新项目</h3><h4 id=\"1-初始化项目\"><a href=\"#1-初始化项目\" class=\"headerlink\" title=\"1. 初始化项目\"></a>1. 初始化项目</h4><p>可以随便找一个目录创建项目，我使用习惯用IDEA进行创建</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> Gone\n<span class=\"token builtin class-name\">cd</span> Gone\ngo mod init Gone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>查看一下 go.mod文件</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">module Gone\n\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>go.mod文件一旦创建后，它的内容将会被go toolchain全面掌控。go toolchain会在各类命令执行时，比如go get、go build、go mod等修改和维护go.mod文件。</p>\n<p>go.mod 提供了module, require、replace和exclude 四个命令</p>\n<ul>\n<li><code>module</code> 语句指定包的名字（路径）</li>\n<li><code>require</code> 语句指定的依赖项模块</li>\n<li><code>replace</code> 语句可以替换依赖项模块</li>\n<li><code>exclude</code> 语句可以忽略依赖项模块</li>\n</ul>\n<h4 id=\"2-添加依赖\"><a href=\"#2-添加依赖\" class=\"headerlink\" title=\"2. 添加依赖\"></a>2. 添加依赖</h4><p>创建 main.go文件</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tr <span class=\"token operator\">:=</span> gin<span class=\"token punctuation\">.</span><span class=\"token function\">Default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/ping\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"pong\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\")</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>执行 go run main.go 运行代码会发现 go mod 会自动查找依赖自动下载<br>再查看 <code>go.mod</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">module Gone\n\ngo <span class=\"token number\">1.14</span>\n\nrequire github.com/gin-gonic/gin v1.6.3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>go module 安装 package 的原則是先拉最新的 release tag，若无tag则拉最新的commit</p>\n<p>go 会自动生成一个 go.sum 文件来记录 dependency tree</p>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/JhSGHb.jpg\"></p>\n<p>再次执行脚本 go run main.go发现跳过了检查并安装依赖的步骤。</p>\n<p>可以使用命令 go list -m -u all 来检查可以升级的package，使用go get -u need-upgrade-package 升级后会将新的依赖版本更新到go.mod * 也可以使用 go get -u 升级所有依赖</p>\n<p>去mod包缓存下看看</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">/Users/youdi/go/pkg/mod/github.com/gin-gonic/gin@v1.6.3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h3 id=\"go-get升级\"><a href=\"#go-get升级\" class=\"headerlink\" title=\"go get升级\"></a>go get升级</h3><ul>\n<li>运行 go get -u 将会升级到最新的次要版本或者修订版本(x.y.z, z是修订版本号， y是次要版本号)</li>\n<li>运行 go get -u=patch 将会升级到最新的修订版本</li>\n<li>运行 go get package@version 将会升级到指定的版本号version</li>\n<li>运行go get如果有版本的更改，那么go.mod文件也会更改</li>\n</ul>\n<h3 id=\"使用replace替换无法直接获取的package\"><a href=\"#使用replace替换无法直接获取的package\" class=\"headerlink\" title=\"使用replace替换无法直接获取的package\"></a>使用replace替换无法直接获取的package</h3><p>由于某些已知的原因，并不是所有的package都能成功下载，比如：golang.org下的包。</p>\n<p>modules 可以通过在 go.mod 文件中使用 replace 指令替换成github上对应的库，比如：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">replace <span class=\"token punctuation\">(</span>\n\tgolang<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>x<span class=\"token operator\">/</span>crypto v0<span class=\"token punctuation\">.</span><span class=\"token number\">0.0</span><span class=\"token operator\">-</span><span class=\"token number\">20190313024323</span><span class=\"token operator\">-</span>a1f597ede03a <span class=\"token operator\">=</span><span class=\"token operator\">></span> github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>golang<span class=\"token operator\">/</span>crypto v0<span class=\"token punctuation\">.</span><span class=\"token number\">0.0</span><span class=\"token operator\">-</span><span class=\"token number\">20190313024323</span><span class=\"token operator\">-</span>a1f597ede03a\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"go-mod发布和使用\"><a href=\"#go-mod发布和使用\" class=\"headerlink\" title=\"go mod发布和使用\"></a>go mod发布和使用</h3><p>参考Roberto Selbach写的go mod入门文章，文末，我给出链接</p>\n<h3 id=\"Creating-a-Module\"><a href=\"#Creating-a-Module\" class=\"headerlink\" title=\"Creating a Module\"></a>Creating a Module</h3><p>如果你设置好go mod了，那你就可以在任何目录下随便创建</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$mkdir</span> gomodone\n<span class=\"token variable\">$cd</span> gomodone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在这个目录下创建一个文件<code>say.go</code></p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> gomodone\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span> \n\n<span class=\"token comment\">// say Hi to someone</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>初始化一个 <code>go.mod</code>文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ go mod init github.com/jacksonyoudi/gomodone\ngo: creating new go.mod: module github.com/jacksonyoudi/gomodone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>查看 go.mod内容如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jacksonyoudi<span class=\"token operator\">/</span>gomodone\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>下面我们要将这个module发布到github上，然后在另外一个程序使用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> init\n<span class=\"token variable\">$vim</span> .gitiiignore\n<span class=\"token variable\">$git</span> commit -am <span class=\"token string\">\"init\"</span>\n// github创建对应的repo\n<span class=\"token variable\">$git</span> remote <span class=\"token function\">add</span> origin git@github.com:jacksonyoudi/gomodone.git\n<span class=\"token variable\">$git</span> push -u origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行完，上面我们就相当于发布完了。</p>\n<p>如果有人需要使用，就可以使用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go get github.com/jacksonyoudi/gomodone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这个时候没有加tag，所以，没有版本的控制。默认是v0.0.0后面接上时间和commitid。如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gomodone@v0.0.0-20200517004046-ee882713fd1e<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>官方不建议这样做，没有进行版本控制管理。</p>\n<h3 id=\"module-versioning\"><a href=\"#module-versioning\" class=\"headerlink\" title=\"module versioning\"></a>module versioning</h3><p>使用tag，进行版本控制</p>\n<h4 id=\"making-a-release\"><a href=\"#making-a-release\" class=\"headerlink\" title=\"making a release\"></a>making a release</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag v1.0.0\n<span class=\"token function\">git</span> push --tags<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>操作完，我们的module就发布了一个v1.0.0的版本了。</p>\n<p>推荐在这个状态下，再切出一个分支，用于后续v1.0.0的修复推送,不要直接在master分支修复</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> checkout -b v1\n<span class=\"token variable\">$git</span> push -u origin v1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"use-our-module\"><a href=\"#use-our-module\" class=\"headerlink\" title=\"use our module\"></a>use our module</h3><p>上面已经发布了一个v1.0.0的版本，我们可以在另一个项目中使用，创建一个go的项目</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$mkdir</span> Gone\n<span class=\"token variable\">$cd</span> Gone\n<span class=\"token variable\">$vim</span> main.go<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"github.com/jacksonyoudi/gomodone\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>gomodone<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码写好了，我们生成 go mod文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go mod init Gone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>上面命令执行完，会生成 go mod文件<br>看下mod文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">module Gone\n\ngo <span class=\"token number\">1.14</span>\n\nrequire <span class=\"token punctuation\">(</span>\n\tgithub.com/jacksonyoudi/gomodone v1.0.0\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$go</span> mod tidy\ngo: finding module <span class=\"token keyword\">for</span> package github.com/jacksonyoudi/gomodone\ngo: found github.com/jacksonyoudi/gomodone <span class=\"token keyword\">in</span> github.com/jacksonyoudi/gomodone v1.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>同时还生成了go.sum, 其中包含软件包的哈希值，以确保我们具有正确的版本和文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">github.com/jacksonyoudi/gomodone v1.0.1 h1:jFd+qZlAB0R3zqrC9kwO8IgPrAdayMUS0rSHMDc/uG8<span class=\"token operator\">=</span>\ngithub.com/jacksonyoudi/gomodone v1.0.1/go.mod h1:XWi+BLbuiuC2YM8Qz4yQzTSPtHt3T3hrlNN2pNlyA94<span class=\"token operator\">=</span>\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0 h1:GpzGeXCx/Xv2ueiZJ8hEhFwLu7xjxLBjkOYSmg8Ya/w<span class=\"token operator\">=</span>\ngithub.com/jacksonyoudi/gomodone/v2 v2.0.0/go.mod h1:L8uFPSZNHoAhpaePWUfKmGinjufYdw9c2i70xtBorSw<span class=\"token operator\">=</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个内容是下面的，需要操作执行的结果</p>\n<p>go run main.go就可以运行了</p>\n<h3 id=\"Making-a-bugfix-release\"><a href=\"#Making-a-bugfix-release\" class=\"headerlink\" title=\"Making a bugfix release\"></a>Making a bugfix release</h3><p>假如fix一个bug,我们在v1版本上进行修复</p>\n<p>修改代码如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// say Hi to someone</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token operator\">-</span>       <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">+</span>       <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修复好，我们开始push</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Emphasize our friendliness\"</span> say.go\n$ <span class=\"token function\">git</span> tag v1.0.1\n$ <span class=\"token function\">git</span> push --tags origin v1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Updating-modules\"><a href=\"#Updating-modules\" class=\"headerlink\" title=\"Updating modules\"></a>Updating modules</h4><p>刚才fix bug，所以要在我们使用项目中更新</p>\n<p>这个需要我们手动执行更新module操作</p>\n<p>我们通过使用我们的好朋友来做到这一点go get：</p>\n<ul>\n<li>运行  <code>go get -u</code> 以使用最新的  minor  版本或修补程序版本（即它将从1.0.0更新到例如1.0.1，或者，如果可用，则更新为1.1.0）</li>\n<li>运行  go get -u=patch 以使用最新的  修补程序  版本（即，将更新为1.0.1但不更新  为1.1.0）</li>\n<li>运行go get package@version 以更新到特定版本（例如github.com/jacksonyoudi/<a href=\"mailto:&#103;&#x6f;&#109;&#111;&#100;&#111;&#x6e;&#101;&#x40;&#118;&#49;&#x2e;&#x30;&#x2e;&#49;\">&#103;&#x6f;&#109;&#111;&#100;&#111;&#x6e;&#101;&#x40;&#118;&#49;&#x2e;&#x30;&#x2e;&#49;</a>）</li>\n</ul>\n<p>目前module最新的也是v1.0.1</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 更新最新\n<span class=\"token variable\">$go</span> get -u\n<span class=\"token variable\">$go</span> get -u<span class=\"token operator\">=</span>patch\n//指定包，指定版本\n<span class=\"token variable\">$go</span> get github.com/jacksonyoudi/gomodone@v1.0.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>操作完，go.mod文件会修改如下:</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">module Gone\n\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span>\n\nrequire <span class=\"token punctuation\">(</span>\n\tgithub<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jacksonyoudi<span class=\"token operator\">/</span>gomodone v1<span class=\"token punctuation\">.</span><span class=\"token number\">0.1</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"Major-versions\"><a href=\"#Major-versions\" class=\"headerlink\" title=\"Major versions\"></a>Major versions</h4><p>根据语义版本语义，主要版本与次要版本  不同。主要版本可能会破坏向后兼容性。从Go模块的角度来看，主要版本是  完全不同的软件包。乍一看这听起来很奇怪，但这是有道理的：两个不兼容的库版本是两个不同的库。<br>比如下面修改，完全破坏了兼容性。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> gomodone\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"errors\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Hi returns a friendly greeting</span>\n<span class=\"token comment\">// Hi returns a friendly greeting in language lang</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> lang <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">switch</span> lang <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Oi, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"es\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"¡Hola, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"fr\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bonjour, %s!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unknown language\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>如上，我们需要不同的大版本，这种情况下</p>\n<p>修改 go.mod如下</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">module github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jacksonyoudi<span class=\"token operator\">/</span>gomodone<span class=\"token operator\">/</span>v2\n\n<span class=\"token keyword\">go</span> <span class=\"token number\">1.14</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>然后，重新tag，push</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit say.go -m <span class=\"token string\">\"Change Hi to allow multilang\"</span>\n$ <span class=\"token function\">git</span> checkout -b v2 <span class=\"token comment\"># 用于v2版本，后续修复v2</span>\n$ <span class=\"token function\">git</span> commit go.mod -m <span class=\"token string\">\"Bump version to v2\"</span>\n$ <span class=\"token function\">git</span> tag v2.0.0\n$ <span class=\"token function\">git</span> push --tags origin v2 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Updating-to-a-major-version\"><a href=\"#Updating-to-a-major-version\" class=\"headerlink\" title=\"Updating to a major version\"></a>Updating to a major version</h3><p>即使发布了库的新不兼容版本，现有软件 也不会中断，因为它将继续使用现有版本1.0.1。go get -u 将不会获得版本2.0.0。<br>如果想使用v2.0.0,代码改成如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"github.com/jacksonyoudi/gomodone/v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tg<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> gomodone<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行 go mod tidy</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">go: finding module <span class=\"token keyword\">for</span> package github.com/jacksonyoudi/gomodone/v2\ngo: downloading github.com/jacksonyoudi/gomodone/v2 v2.0.0\ngo: found github.com/jacksonyoudi/gomodone/v2 <span class=\"token keyword\">in</span> github.com/jacksonyoudi/gomodone/v2 v2.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>当然，两个版本都可以同时使用, 使用别名<br>如下：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"github.com/jacksonyoudi/gomodone\"</span>\n\tmv2 <span class=\"token string\">\"github.com/jacksonyoudi/gomodone/v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tg<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> mv2<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>gomodone<span class=\"token punctuation\">.</span><span class=\"token function\">SayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Roberto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行一下 <code>go mod tidy</code></p>\n<h3 id=\"Vendoring\"><a href=\"#Vendoring\" class=\"headerlink\" title=\"Vendoring\"></a>Vendoring</h3><p>默认是忽略vendor的，如果想在项目目录下有vendor可以执行下面命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$go vendor<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>当然，如果构建程序的时候，希望使用vendor中的依赖，</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">$ <span class=\"token keyword\">go</span> build <span class=\"token operator\">-</span>mod vendor<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<h3 id=\"IDEA下开发GO\"><a href=\"#IDEA下开发GO\" class=\"headerlink\" title=\"IDEA下开发GO\"></a>IDEA下开发GO</h3><ol>\n<li>创建go项目</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/IqR0yI.jpg\"></p>\n<ol start=\"2\">\n<li><p>创建完项目，会自动生成go mod文件<br>如果需要修改，可以手动修改，加入git等操作</p>\n</li>\n<li><p>写业务逻辑代码</p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/ZNN4tE.jpg\"><br>4. 解决依赖，更新go.mod</p>\n<p><img src=\"https://raw.githubusercontent.com/jacksonyoudi/images/main/uPic/CxoGM9.jpg\"></p>\n<ol start=\"5\">\n<li>go build</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckrrhhxoo0000vluq5lqz2epe","category_id":"ckrrhhxow0001vluqhn6r986b","_id":"ckrrhhxoz0004vluq0zz6eyyc"}],"PostTag":[{"post_id":"ckrrhhxoo0000vluq5lqz2epe","tag_id":"ckrrhhxox0002vluqfskc9yv4","_id":"ckrrhhxoz0006vluq4pdtendx"},{"post_id":"ckrrhhxoo0000vluq5lqz2epe","tag_id":"ckrrhhxoy0003vluq7d613nu4","_id":"ckrrhhxp00007vluqc31vhk27"},{"post_id":"ckrrhhxoo0000vluq5lqz2epe","tag_id":"ckrrhhxoz0005vluqbzqn4b29","_id":"ckrrhhxp00008vluqc7lg6i0x"}],"Tag":[{"name":"go","_id":"ckrrhhxox0002vluqfskc9yv4"},{"name":"tool","_id":"ckrrhhxoy0003vluq7d613nu4"},{"name":"language","_id":"ckrrhhxoz0005vluqbzqn4b29"}]}}